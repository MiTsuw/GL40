[global_param]

# choix du mode de fonctionnement 0:evaluate, 1:execution
functionModeChoice = 1

# level = radius map
levelRadius = 15

traceActive = false
traceReportBest = true
traceSaveSolutionFile = false

# ponderations de la fonction objectif 
# f = W1 * objective_1 + W2 * objective_2 + W3 * objective_3
weightObjective1 = 0.01
weightObjective2 = 0.001
weightObjective3 = 0.0001

[test_cellular]
#0: CenterTocenter, 1:Center, 2:Id
testCellular = 2

[local_search]

# faux s'il s'agit de partir de l'input comme solution pre-construite
# vrai si on construit a partir d'une initialisation aleatoire
constructFromScratchParam = true

# 0 marche aleatoire, 1 LS first improvement, 2 LS best improvement
localSearchType = 1

neighborhoodSize = 1000
nbOfConstructAndRepairs = 10
nbOfInternalConstructs = 100
nbOfInternalRepairs = 20000
#nbOfConstructAndRepairs = 1
#nbOfInternalConstructs = 1
#nbOfInternalRepairs = 0

# Probablitites operateurs de voisinage (sur 100 tirages)
# 5 operateurs (0 a 5) = 6 probabilites de tirage
probabilityOperators = 2-1-2-10-10-75

[genetic_method]

# algo memetique
memeticAlgorithm = true

# taille population
populationSize = 10

# nombre maximum de generations
generationNumber = 10

# algo memetic (parametres recherche locale surcharges)
MAneighborhoodSize = 100
MAnbOfInternalConstructs = 10
MAnbOfInternalRepairs = 2000

[instance_generator]

# Nombre d'instances generees
nInstances = 10
saturation = 10

[input]
useDisparityMap = 1
#inputSourceImageLeft = venusL_groundtruth.pgm
inputSourceImageLeft = venusL.png
#inputSourceImageRight = venusR.png
#inputDisparityImageGroundTruth = venusL_groundtruth.pgm

[param_1]
fileGrid2DPoints = output.points
fileGrid3DPoints = output3D.points
fileGridOfColors = output3D.gridcolors
statisticsFile = statistics.stats

[param_2]
# Image parameters
scaleFactor = 8.0
baseLine = 0.16
focalDistance = 374.0
#focalDistance = 935.0
#focalDistance = 3740.0
disparityRange = 20
backgroundDisparity = 25
minMeshDisparity = 25

